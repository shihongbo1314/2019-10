/* 
    less   1.嵌套写法
           2.可以写变量
           3.混合
           4.函数
           5.循环




*/
.qqq(@n,@a) when(@n < 10){
    .box_@{n}{
        width: @a*@n;
    };
    .qqq(@n+1,@a);
};
.qqq(1,10px);

.mystyle(@a,@b){//还可以给默认值
    width: @a;
    height: @b;
}
@w:200px;//声明一个变量@w  对应的值是200px
@b:box;
@img:'../img/';
.w{
    // width: 100%;
    // height: 100%;
    .mystyle(200px,300px);
    // overflow: hidden;
    .qqq{
        background: red;
    }
}
div{
    .w;//直接把w的所有样式都复制过来
}
span:extend(.w){
    // 只混合.w自己的样式  不会混合后代的样式
}



*{
    margin: 0;
    padding:0;
    list-style: none;
}
#box{
    width: 200px;
    height: 200px;
    margin: 150px auto;
    position: relative;
    background:chartreuse;
    perspective: 1000px;/* 设置元素被查看位置的视图： */;
    ul{
        position: absolute;
        width: 100%;
        height: 100%;
        transform-style: preserve-3d;
        transform: rotateX(45deg) rotateY(30deg);
        animation: move 2s infinite linear;
        transform-origin: 100px 100px 100px;/* X　　Y　　Z　旋转基准点 */;
    li{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        text-align: center;
        line-height: 200px;
        background: rgba(102,212,216,0.6);
        border: 10px dashed salmon;
        box-sizing: border-box;
       }
    }


}
#box ul li:nth-child(2){
    transform: translateY(-100%) rotateX(-90deg);
    transform-origin: bottom;
}
#box ul li:nth-child(3){
    transform: translateX(-100%) rotateY(90deg);
    transform-origin: right;
}
#box ul li:nth-child(4){
    transform: translateX(100%) rotateY(-90deg);
    transform-origin: left;
}
#box ul li:nth-child(5){
    transform: translateY(100%) rotateX(90deg);
    transform-origin: top;
}
#box ul li:nth-child(6){
    transform:rotateX(180deg) translateZ(-200px);
}


@keyframes move {
    0%{
        transform:rotateX(0)  rotateY(0);
    }
    100%{
        transform:rotateX(360deg)  rotateY(360deg) ;
    }
}
